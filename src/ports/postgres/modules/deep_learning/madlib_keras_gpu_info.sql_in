/* ----------------------------------------------------------------------- *//**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *
 * @file madlib_keras_gpu_info.sql_in
 *
 * @brief SQL functions for GPU configuration.
 * @date Nov 2019
 *
 *
 *//* ----------------------------------------------------------------------- */

m4_include(`SQLCommon.m4')

DROP TYPE IF EXISTS MADLIB_SCHEMA.gpu_info CASCADE;
CREATE TYPE MADLIB_SCHEMA.gpu_info as(
hostname TEXT,
gpu_descr TEXT);

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.gpu_info_tensorflow() RETURNS TEXT[] as
$$
    PythonFunctionBodyOnlyNoSchema(`deep_learning', `madlib_keras_gpu_info')
    return madlib_keras_gpu_info.GPUInfoFunctions.get_gpu_info_from_tensorflow()
$$ LANGUAGE plpythonu
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `NO SQL', `');

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.gpu_info_nvidia() RETURNS TEXT[] as
$$
    PythonFunctionBodyOnlyNoSchema(`deep_learning', `madlib_keras_gpu_info')
    return madlib_keras_gpu_info.GPUInfoFunctions.get_gpu_info_from_nvidia()
$$ LANGUAGE plpythonu
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `NO SQL', `');

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.gpu_configuration(source text)
RETURNS SETOF MADLIB_SCHEMA.gpu_info AS
$$
    PythonFunctionBodyOnly(`deep_learning', `madlib_keras_gpu_info')
    from utilities.control import MinWarning
    with AOControl(False) and MinWarning("error"):
        return madlib_keras_gpu_info.gpu_configuration(schema_madlib, source)
$$
LANGUAGE plpythonu
m4_ifdef(`__HAS_FUNCTION_PROPERTIES__', `NO SQL', `');

CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.gpu_configuration()
RETURNS SETOF MADLIB_SCHEMA.gpu_info AS
$$
    SELECT MADLIB_SCHEMA.gpu_configuration(NULL);
$$
LANGUAGE sql;
