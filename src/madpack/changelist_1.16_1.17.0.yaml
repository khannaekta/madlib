# ------------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# ------------------------------------------------------------------------------

# Changelist for MADlib version rel/v1.16 to rel/v1.17.0

# This file contains all changes that were introduced in a new version of
# MADlib. This changelist is used by the upgrade script to detect what objects
# should be upgraded (while retaining all other objects from the previous version)

# New modules (actually .sql_in files) added in upgrade version
# For these files the sql_in code is retained as is with the functions in the
# file installed on the upgrade version. All other files (that don't have
# updates), are cleaned up to remove object replacements
new module:
    madlib_keras_fit_multiple_model:
    madlib_keras_gpu_info:
    madlib_keras_model_selection:

# Changes in the types (UDT) including removal and modification
udt:

# List of the UDF changes that affect the user externally. This includes change
# in function name, return type, argument order or types, or removal of
# the function. In each case, the original function is as good as removed and a
# new function is created. In such cases, we should abort the upgrade if there
# are user views dependent on this function, since the original function will
# not be present in the upgraded version.
udf:
    - fit_transition:
        rettype: bytea
        argument: bytea, smallint[], real[], text, text, text, integer, integer[], integer[], integer, integer, bytea
    - gen_rules_from_cfp:
        rettype: SETOF text[]
        argument: text, integer
    - internal_keras_eval_transition:
        rettype: real[]
        argument: real[], smallint[], real[], text, bytea, text, integer, integer[], integer[], integer, integer
    - internal_keras_predict:
        rettype: double precision[]
        argument: real[], text, bytea, boolean, double precision, integer, integer[], integer[], integer, integer
    - madlib_keras_evaluate:
        rettype: void
        argument: character varying, character varying, character varying, integer
    - madlib_keras_fit:
        rettype: void
        argument: character varying, character varying, character varying, integer, character varying, character varying, integer, integer
    - madlib_keras_fit:
        rettype: void
        argument: character varying, character varying, character varying, integer, character varying, character varying, integer, integer, character varying
    - madlib_keras_fit:
        rettype: void
        argument: character varying, character varying, character varying, integer, character varying, character varying, integer, integer, character varying, integer
    - madlib_keras_fit:
        rettype: void
        argument: character varying, character varying, character varying, integer, character varying, character varying, integer, integer, character varying, integer, boolean
    - madlib_keras_fit:
        rettype: void
        argument: character varying, character varying, character varying, integer, character varying, character varying, integer, integer, character varying, integer, boolean, character varying
    - madlib_keras_fit:
        rettype: void
        argument: character varying, character varying, character varying, integer, character varying, character varying, integer, integer, character varying, integer, boolean, character varying, character varying
    - madlib_keras_predict:
        rettype: void
        argument: character varying, character varying, character varying, character varying, character varying, character varying, integer

# Changes to aggregates (UDA) including removal and modification
# Overloaded functions should be mentioned separately
uda:
    - agg_array_concat:
        rettype: anyarray
        argument: anyarray
    - fit_step:
        rettype: bytea
        argument: smallint[], real[], text, text, text, integer, integer[], integer[], integer, integer, bytea
    - internal_keras_evaluate:
        rettype: real[]
        argument: smallint[], real[], text, bytea, text, integer, integer[], integer[], integer, integer

# List of the UDC, UDO and UDOC changes.
udc:

# Changes in the operators (UDO)
udo:
    - '%*%':
        rightarg: double precision[]
        leftarg: schema_madlib.svec
        rettype: double precision
    - '%*%':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: double precision
    - '%*%':
        rightarg: schema_madlib.svec
        leftarg: double precision[]
        rettype: double precision
    - '*':
        rightarg: double precision[]
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '*':
        rightarg: schema_madlib.svec
        leftarg: double precision[]
        rettype: schema_madlib.svec
    - '*':
        rightarg: double precision[]
        leftarg: double precision[]
        rettype: schema_madlib.svec
    - '*':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '*||':
        rightarg: schema_madlib.svec
        leftarg: integer
        rettype: schema_madlib.svec
    - '+':
        rightarg: double precision[]
        leftarg: double precision[]
        rettype: schema_madlib.svec
    - '+':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '+':
        rightarg: schema_madlib.svec
        leftarg: double precision[]
        rettype: schema_madlib.svec
    - '+':
        rightarg: double precision[]
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '-':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '-':
        rightarg: schema_madlib.svec
        leftarg: double precision[]
        rettype: schema_madlib.svec
    - '-':
        rightarg: double precision[]
        leftarg: double precision[]
        rettype: schema_madlib.svec
    - '-':
        rightarg: double precision[]
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '/':
        rightarg: double precision[]
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '/':
        rightarg: schema_madlib.svec
        leftarg: double precision[]
        rettype: schema_madlib.svec
    - '/':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '/':
        rightarg: double precision[]
        leftarg: double precision[]
        rettype: schema_madlib.svec
    - '<':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: boolean
    - '<=':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: boolean
    - '<>':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: boolean
    - '=':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: boolean
    - '==':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: boolean
    - '>':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: boolean
    - '>=':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: boolean
    - '^':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec
    - '||':
        rightarg: schema_madlib.svec
        leftarg: schema_madlib.svec
        rettype: schema_madlib.svec

# Changes in the operator classes (UDOC)
udoc:
    - 'svec_ops':
        index_method: btree
